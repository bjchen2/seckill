<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 配置SpringMVC -->
    <!-- 1:开启SpringMVC的注解模式，引入SpringMVC支持的注解 -->
    <!-- 简化配置：
            （1）自动注册DefaultAnnotationHandlerMapping，AnnotationMethodHandlerAdapter注解
            （2）提供一系列的：数据绑定，数字和日期的format，@NumberFormat，@DateTimeFormat，
            xml，json默认读写支持
    -->
    <mvc:annotation-driven/>

    <!-- 2:静态资源默认servlet配置
        （1）假如对静态资源的处理，如：js，gif，png
        （2）允许使用"/"做整体映射
    -->
    <mvc:default-servlet-handler/>

    <!-- 3.配置jsp，显示ViewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 扫描相关的bean:使其可以在SpringIOC容器中定义拦截器 -->
    <context:component-scan base-package="org.seckill.web"/>

</beans>